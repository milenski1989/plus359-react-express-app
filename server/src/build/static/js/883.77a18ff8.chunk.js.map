{"version":3,"file":"static/js/883.77a18ff8.chunk.js","mappings":"0OAOA,MAAMA,EAAY,CACdC,eAAgB,OAChBC,MAAO,WAyIX,EAtIe,KAEX,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAmBC,IAAwBJ,EAAAA,EAAAA,WAAS,IACpDK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAClCO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,EAAaC,IAAkBV,EAAAA,EAAAA,UAAS,CAACW,OAAO,EAAOC,QAAS,MAChEC,EAAeC,IAAoBd,EAAAA,EAAAA,UAAS,CAACe,SAAS,EAAOH,QAAS,KAoC7E,OACI,iBAAKI,UAAU,0BAAf,WACI,SAACC,EAAA,EAAD,CACIC,KAAMT,EAAYE,MAClBQ,YAAa,IAAMT,EAAe,CAACC,OAAO,EAAOC,QAAS,KAC1DA,QAASH,EAAYG,QACrBQ,SAAS,WAGb,SAACH,EAAA,EAAD,CACIC,KAAML,EAAcE,QACpBI,YAAa,IAAML,GAAiB,GACpCF,QAASC,EAAcD,QACvBQ,SAAS,YAGZb,GACG,SAACc,EAAA,EAAD,CAAkBL,UAAU,SAASnB,MAAM,aAG3C,iBAAKmB,UAAU,6DAAf,WACI,gBAAKA,UAAU,mCAAf,UACI,eAAIA,UAAU,8EAAd,wBAGJ,iBAAKA,UAAU,yCAAf,WACI,kBAAMA,UAAU,YAAYM,SArC1BC,IAClBA,EAAMC,iBACNhB,GAAW,GAzBMiB,WACjB,MAAMC,QAAYC,MAAM,yDAA0D,CAC9EC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlC,MAAAA,EACAG,SAAAA,EACAI,SAAAA,MAGF4B,QAAaP,EAAIQ,OACJ,MAAfR,EAAIS,QAAiC,MAAfT,EAAIS,QAC1BC,QAAQC,IAAIJ,GACZzB,GAAW,GACXM,EAAiB,CAACC,SAAS,EAAMH,QAASqB,EAAKrB,YAE/CF,EAAe,CAACC,OAAO,EAAMC,QAASqB,EAAKtB,QAC3CH,GAAW,KAOf8B,IAkCgB,WACI,4BACI,kBAAOC,QAAQ,QAAQvB,UAAU,oDAAjC,qBACA,gBAAKA,UAAU,OAAf,UACI,kBAAOwB,SAAWC,GAAM1C,EAAS0C,EAAEC,OAAOC,OAAQC,GAAG,QAAQC,KAAK,QAAQC,KAAK,QAAQC,aAAa,QAAQC,UAAQ,EAChHC,YAAY,oBACZjC,UAAU,6WAItB,4BACI,gBAAKA,UAAU,oCAAf,UACI,kBAAOuB,QAAQ,WAAWvB,UAAU,oDAApC,0BAEJ,gBAAKA,UAAU,OAAf,UACI,kBAAOwB,SAAWC,GAAMvC,EAAYuC,EAAEC,OAAOC,OAAQC,GAAG,WAAWC,KAAK,WAAWC,KAAK,WAAWC,aAAa,mBAAmBC,UAAQ,EACvIhC,UAAU,gVAMtB,4BACI,gBAAKA,UAAU,oCAAf,UACI,kBAAOuB,QAAQ,WAAWvB,UAAU,oDAApC,kCAEJ,iBAAKA,UAAU,OAAf,WACI,kBAAOwB,SA1DXC,IACpBA,EAAEC,OAAOC,QAAU1C,EAAUG,GAAqB,GACjDA,GAAqB,IAwDuCyC,KAAK,WAAWC,KAAK,WAAWC,aAAa,mBAC9E/B,UAAU,2UAEZb,GAAqBF,IACrB,cAAGe,UAAU,eAAb,2CAOV,4BACI,gBAAKA,UAAU,oCAAf,UACI,kBAAOuB,QAAQ,WAAWvB,UAAU,oDAApC,2BAEJ,gBAAKA,UAAU,OAAf,UACI,kBAAOwB,SAAWC,GAAMnC,EAAYmC,EAAEC,OAAOC,OAAQC,GAAG,WAAWC,KAAK,WAAWC,KAAK,OAAOC,aAAa,WAAWC,UAAQ,EAC3HhC,UAAU,gVAKtB,0BACI,mBAAQ8B,KAAK,SAASI,UAAWpD,IAAUG,IAAaI,EAAUW,UAAYlB,GAAUG,GAAaI,EAA6L,gLAAlL,gLAAhH,2BAIR,iBAAKW,UAAU,0CAAf,0CAC4B,SAAC,KAAD,CAAMmC,GAAG,SAASC,MAAOzD,EAAzB","sources":["components/Signup.js"],"sourcesContent":["import { CircularProgress } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport './App.css'\r\nimport Message from \"./Message\"\r\nimport './Signup.css'\r\n\r\nconst linkStyle = {\r\n    textDecoration: \"none\",\r\n    color: \"#6ec1e4\",\r\n};\r\n\r\nconst Signup = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmedPassword, setConfirmedPassword] = useState(false)\r\n    const [userName, setUserName] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [signupError, setSignupError] = useState({error: false, message: ''})\r\n    const [signupSuccess, setSignupSuccess] = useState({success: false, message: ''})\r\n\r\n    const handleSignup = async () => {\r\n        const res = await fetch(\"artworks-management-app.vercel.app/auth/signup\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n                userName\r\n            })\r\n        })\r\n        const data = await res.json()\r\n        if (res.status === 200 || res.status === 201) {\r\n            console.log(data)\r\n            setLoading(false)\r\n            setSignupSuccess({success: true, message: data.message})\r\n        } else {\r\n            setSignupError({error: true, message: data.error})\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        handleSignup()\r\n    }\r\n\r\n    const checkPasswordMatch = (e) => {\r\n        if (e.target.value === password) setConfirmedPassword(true)\r\n        else setConfirmedPassword(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"md:container md:mx-auto\">\r\n            <Message \r\n                open={signupError.error} \r\n                handleClose={() => setSignupError({error: false, message: \"\"})} \r\n                message={signupError.message} \r\n                severity=\"error\"\r\n            />\r\n            \r\n            <Message \r\n                open={signupSuccess.success} \r\n                handleClose={() => setSignupSuccess(false)} \r\n                message={signupSuccess.message} \r\n                severity=\"success\"\r\n            />\r\n\r\n            {loading ? \r\n                <CircularProgress className=\"loader\" color=\"primary\" /> \r\n                : \r\n\r\n                <div className=\"flex min-h-full flex-col justify-center px-6 py-12 lg:px-8\">\r\n                    <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n                        <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">Sign up</h2>\r\n                    </div>\r\n\r\n                    <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n                        <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">*Email</label>\r\n                                <div className=\"mt-2\">\r\n                                    <input onChange={(e) => setEmail(e.target.value)} id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" required \r\n                                        placeholder=\"example@email.com\"\r\n                                        className=\"placeholder-shown:border-gray-500block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500 invalid:border-pink-500 invalid:text-pink-600 focus:invalid:border-pink-500 focus:invalid:ring-pink-500 sm:text-sm sm:leading-6\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">*Password</label>\r\n                                </div>\r\n                                <div className=\"mt-2\">\r\n                                    <input onChange={(e) => setPassword(e.target.value)} id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" required\r\n                                        className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500   invalid:border-pink-500 invalid:text-pink-600\r\n                                     focus:invalid:border-pink-500 focus:invalid:ring-pink-500 sm:text-sm sm:leading-6\"/>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">*Confirm Password</label>\r\n                                </div>\r\n                                <div className=\"mt-2\">\r\n                                    <input onChange={checkPasswordMatch} name=\"password\" type=\"password\" autoComplete=\"current-password\" \r\n                                        className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500   invalid:border-pink-500 invalid:text-pink-600\r\n                                        focus:invalid:border-pink-500 focus:invalid:ring-pink-500 sm:text-sm sm:leading-6\"                                      />\r\n                                    {!confirmedPassword && password &&\r\n                                      <p className=\"text-red-400\">\r\n                                          Passwords do not match\r\n                                      </p>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <label htmlFor=\"username\" className=\"block text-sm font-medium leading-6 text-gray-900\">*User name</label>\r\n                                </div>\r\n                                <div className=\"mt-2\">\r\n                                    <input onChange={(e) => setUserName(e.target.value)} id=\"username\" name=\"username\" type=\"text\" autoComplete=\"username\" required\r\n                                        className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500   invalid:border-pink-500 invalid:text-pink-600\r\n                                        focus:invalid:border-pink-500 focus:invalid:ring-pink-500 sm:text-sm sm:leading-6\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button type=\"submit\" disabled={!email || !password || !userName} className={!email || !password || !userName ? \"flex w-full bg-white justify-center rounded-md px-3 py-1.5 text-sm leading-6 text-grey shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2\" : \"flex w-full bg-main justify-center rounded-md px-3 py-1.5 text-sm leading-6 text-white shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2\"}>Sign up</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"mt-10 text-center text-sm text-gray-500\">\r\n                        Have an account? Go back to <Link to='/login' style={linkStyle}>login</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Signup"],"names":["linkStyle","textDecoration","color","email","setEmail","useState","password","setPassword","confirmedPassword","setConfirmedPassword","userName","setUserName","loading","setLoading","signupError","setSignupError","error","message","signupSuccess","setSignupSuccess","success","className","Message","open","handleClose","severity","CircularProgress","onSubmit","event","preventDefault","async","res","fetch","method","headers","body","JSON","stringify","data","json","status","console","log","handleSignup","htmlFor","onChange","e","target","value","id","name","type","autoComplete","required","placeholder","disabled","to","style"],"sourceRoot":""}